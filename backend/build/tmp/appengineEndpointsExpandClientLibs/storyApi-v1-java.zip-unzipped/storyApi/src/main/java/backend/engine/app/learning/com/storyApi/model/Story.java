/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2015-11-16 19:10:01 UTC)
 * on 2015-12-15 at 01:22:21 UTC 
 * Modify at your own risk.
 */

package backend.engine.app.learning.com.storyApi.model;

/**
 * Model definition for Story.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the storyApi. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Story extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String component;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long id;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key @com.google.api.client.json.JsonString
  private java.lang.Long participants;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private com.google.api.client.util.DateTime regDate;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String sprint;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String storyName;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getComponent() {
    return component;
  }

  /**
   * @param component component or {@code null} for none
   */
  public Story setComponent(java.lang.String component) {
    this.component = component;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getId() {
    return id;
  }

  /**
   * @param id id or {@code null} for none
   */
  public Story setId(java.lang.Long id) {
    this.id = id;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Long getParticipants() {
    return participants;
  }

  /**
   * @param participants participants or {@code null} for none
   */
  public Story setParticipants(java.lang.Long participants) {
    this.participants = participants;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public com.google.api.client.util.DateTime getRegDate() {
    return regDate;
  }

  /**
   * @param regDate regDate or {@code null} for none
   */
  public Story setRegDate(com.google.api.client.util.DateTime regDate) {
    this.regDate = regDate;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSprint() {
    return sprint;
  }

  /**
   * @param sprint sprint or {@code null} for none
   */
  public Story setSprint(java.lang.String sprint) {
    this.sprint = sprint;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getStoryName() {
    return storyName;
  }

  /**
   * @param storyName storyName or {@code null} for none
   */
  public Story setStoryName(java.lang.String storyName) {
    this.storyName = storyName;
    return this;
  }

  @Override
  public Story set(String fieldName, Object value) {
    return (Story) super.set(fieldName, value);
  }

  @Override
  public Story clone() {
    return (Story) super.clone();
  }

}
